package com.dao;

import java.util.List;
import java.util.Map;

import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.po.MzywShswcSzxx;
@Repository
public class MzywShswcSzxxDao {
	@Autowired
    private SessionFactory sessionFactory;
	
    //获取和当前线程绑定的Seesion
    private Session getSession()
    {
        return sessionFactory.getCurrentSession();
    }
    //获取逝者信息列表
    public List<MzywShswcSzxx> queryList(Map<Object,Object> map){
    	String sql="select * from t_mzyw_shswc_szxx "
    			+ "where szxm like ? "
    			+ "and zhxgsj between ? and ? "
    			+ "and szsfzhm like ? ";
    	if(!map.get("bygmc").equals("")) {
    		sql+="and bygmc =?";
    	}else {
    		sql+="and 1=1 or bygmc =?";
    	}
    	sql+=" limit ?,?";
    	SQLQuery query = getSession().createSQLQuery(sql).addEntity(MzywShswcSzxx.class);
    	query.setParameter(0, map.get("szxm"));
    	query.setParameter(1, map.get("startDate"));
    	query.setParameter(2, map.get("endDate"));
    	query.setParameter(3, map.get("szsfzhm"));
    	query.setParameter(4, map.get("bygmc"));
    	query.setParameter(5, map.get("start"));
    	query.setParameter(6, map.get("end"));
		@SuppressWarnings("unchecked")
		List<MzywShswcSzxx> list = query.list();
    	return list;
    }
  //获取逝者信息列表长度
    public int queryListCount(Map<Object,Object> map) {
    	String sql="select count(1) from t_mzyw_shswc_szxx "
    			+ "where szxm like ? "
    			+ "and zhxgsj between ? and ? "
    			+ "and szsfzhm like ? ";
    	    	if(!map.get("bygmc").equals("")) {
    	    		sql+="and bygmc =?";
    	    	}else {
    	    		sql+="and 1=1 or bygmc =?";
    	    	}
    	SQLQuery query = getSession().createSQLQuery(sql);
    	query.setParameter(0, map.get("szxm"));
    	query.setParameter(1, map.get("startDate"));
    	query.setParameter(2, map.get("endDate"));
    	query.setParameter(3, map.get("szsfzhm"));
    	query.setParameter(4, map.get("bygmc"));
    	int count=((Number)query.uniqueResult()).intValue();  
    	return count;
    }
	
    public MzywShswcSzxx queryById(String id) {
    	MzywShswcSzxx mzywShswcSzxx = (MzywShswcSzxx)getSession().get(MzywShswcSzxx.class, id);
		return mzywShswcSzxx;
	}
	
	//根据id删除逝者信息
	public void deleteById(String id) {
		MzywShswcSzxx m=new MzywShswcSzxx();
		m.setId(id);
		getSession().delete(m);
	}
	//更新对象信息
	public void update(MzywShswcSzxx mzy) {
		MzywShswcSzxx oldMzy= (MzywShswcSzxx)queryById(mzy.getId());
		mzy.setCjsj(oldMzy.getCjsj());
		mzy.setCjyh(oldMzy.getCjyh());
		mzy.setYxbs(oldMzy.getYxbs());
		mzy.setBygmc(oldMzy.getBygmc());
		getSession().update(mzy);
	}
	//新增对象信息
	public void add(MzywShswcSzxx mzy) {
		getSession().save(mzy);
	}
}
